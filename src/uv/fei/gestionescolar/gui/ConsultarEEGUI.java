/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uv.fei.gestionescolar.gui;

import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import uv.fei.gestionescolar.bussinesslogic.AcademicoDAO;
import uv.fei.gestionescolar.bussinesslogic.AlumnoDAO;
import uv.fei.gestionescolar.bussinesslogic.ExperienciaEducativaDAO;
import uv.fei.gestionescolar.domain.Alumno;
import uv.fei.gestionescolar.domain.ExperienciaEducativa;
import uv.fei.gestionescolar.domain.Usuario;
import uv.fei.sistemadetutorias.domain.Academico;

/**
 *
 * @author oscar
 */
public class ConsultarEEGUI extends javax.swing.JFrame {
    private static int numeroPersonal = 0;
    private static int idRol = 0;
    private static String matricula = "";
    private final int ALUMNO = 1;
    private final int ACADEMICO = 2;
    int nrc = 0;
    ArrayList<ExperienciaEducativa> experienciasObtenidas = new ArrayList<ExperienciaEducativa>();
    ArrayList<ExperienciaEducativa> nrcObtenidos = new ArrayList<ExperienciaEducativa>();
    ExperienciaEducativaDAO experienciaDAO = new ExperienciaEducativaDAO();
    AcademicoDAO academicoDAO = new AcademicoDAO();
    AlumnoDAO alumnoDAO = new AlumnoDAO();
    DefaultTableModel modelo = new DefaultTableModel() {
        @Override 
        public boolean isCellEditable(int row, int column) { 
            return false; 
        } 
    };
    /**
     * Creates new form ConsultarHorarioGUI
     */
    public ConsultarEEGUI() {
        initComponents();
    }
    public ConsultarEEGUI(Usuario usuario) {
        initComponents();
        matricula = usuario.getMatricula();
        idRol = usuario.getIdRol();
        numeroPersonal = usuario.getNumeroDePersonal();
        String[] titulo = new String[]{"Nombre", "Tipo", "Clase", "Hora Inicio", "Hora Fin", "Ubicacion", "Dias"};
        modelo.setColumnIdentifiers(titulo);
        tblExperienciasEducativas.setModel(modelo);
        try{
            experienciasObtenidas = experienciaDAO.consultarOfertaEducativa();
            for (ExperienciaEducativa experienciaObtenida : experienciasObtenidas) {
                cbExperienciaEducativa.addItem(experienciaObtenida.getNombre());
            }
        } catch (SQLException mensajeError){
            JOptionPane.showMessageDialog(null, mensajeError);
        } catch (NullPointerException mensajeError){
            JOptionPane.showMessageDialog(null, "No hay EE disponibles");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbExperienciaEducativa = new javax.swing.JLabel();
        lbConsultarEE = new javax.swing.JLabel();
        cbExperienciaEducativa = new javax.swing.JComboBox<>();
        lbNrc = new javax.swing.JLabel();
        cbNrc = new javax.swing.JComboBox<>();
        spExperienciasEducativas = new javax.swing.JScrollPane();
        tblExperienciasEducativas = new javax.swing.JTable();
        btnCerrarSesion = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbExperienciaEducativa.setText("Experiencia Educativa");

        lbConsultarEE.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbConsultarEE.setText("Consultar Experiencias Educativas");

        cbExperienciaEducativa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbExperienciaEducativaItemStateChanged(evt);
            }
        });

        lbNrc.setText("NRC");

        cbNrc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        tblExperienciasEducativas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        spExperienciasEducativas.setViewportView(tblExperienciasEducativas);

        btnCerrarSesion.setText("Cerrar sesi√≥n");
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbExperienciaEducativa)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbConsultarEE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbExperienciaEducativa, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(lbNrc)
                                .addGap(18, 18, 18)
                                .addComponent(cbNrc, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCerrarSesion)
                                .addGap(263, 263, 263))
                            .addComponent(spExperienciasEducativas, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lbConsultarEE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbExperienciaEducativa)
                    .addComponent(cbExperienciaEducativa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNrc)
                    .addComponent(cbNrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(18, 18, 18)
                .addComponent(spExperienciasEducativas, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnCerrarSesion)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        InicioSesionGUI consultarEE = new InicioSesionGUI();
        this.setVisible(false);
        consultarEE.setVisible(true);
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    private void cbExperienciaEducativaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbExperienciaEducativaItemStateChanged
        String nombreExperiencia = String.valueOf(cbExperienciaEducativa.getSelectedItem());
        cbNrc.removeAllItems();
        try{
            nrcObtenidos = experienciaDAO.consultarNrc(nombreExperiencia);
            for (ExperienciaEducativa nrcObtenido : nrcObtenidos) {
                cbNrc.addItem(String.valueOf(nrcObtenido.getNrc()));
            }
        } catch (SQLException mensajeError){
            JOptionPane.showMessageDialog(null, mensajeError);
        } catch (NullPointerException mensajeError){
            JOptionPane.showMessageDialog(null, "No hay EE disponibles");
        }
    }//GEN-LAST:event_cbExperienciaEducativaItemStateChanged

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        modelo.setRowCount(0);
        nrc = Integer.parseInt(cbNrc.getSelectedItem().toString());
        try {
            ExperienciaEducativa experienciaObtenida = experienciaDAO.consultarPorNrc(nrc);
            ArrayList<Academico> academicosObtenidos = (ArrayList<Academico>) academicoDAO.consultarClases(nrc);
            for (int i = 0; i < academicosObtenidos.size(); i++) {
                Academico academicoObtenido;
                academicoObtenido = academicoDAO.consultarPorNumeroPersonal(academicosObtenidos.get(i).getNumeroDePersonal());
                modelo.addRow(new Object[] {academicoObtenido.getNombreCompleto(), "Acad√©mico", experienciaObtenida.getNombre(), experienciaObtenida.getHorarioInicio(), experienciaObtenida.getHorarioFin(),
                experienciaObtenida.getUbicacion(), experienciaObtenida.getDias()});
            }
            ArrayList<Alumno> alumnosObtenidos = (ArrayList<Alumno>) alumnoDAO.consultarClases(nrc);
            for (int i = 0; i < alumnosObtenidos.size(); i++) {
                Alumno alumnoObtenido;
                alumnoObtenido = alumnoDAO.consultarPorMatricula(alumnosObtenidos.get(i).getMatricula());
                modelo.addRow(new Object[] {alumnoObtenido.getNombreCompleto(), "Alumno", experienciaObtenida.getNombre(), experienciaObtenida.getHorarioInicio(), experienciaObtenida.getHorarioFin(),
                experienciaObtenida.getUbicacion(), experienciaObtenida.getDias()});
            }
        } catch (NullPointerException mensajeError) {
            JOptionPane.showMessageDialog(null, "No hay horarios registrados", "Notificaci√≥n", JOptionPane.YES_OPTION);
        } catch (SQLException mensajeError) {
            JOptionPane.showMessageDialog(null, mensajeError.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultarEEGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultarEEGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultarEEGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultarEEGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultarEEGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JComboBox<String> cbExperienciaEducativa;
    private javax.swing.JComboBox<String> cbNrc;
    private javax.swing.JLabel lbConsultarEE;
    private javax.swing.JLabel lbExperienciaEducativa;
    private javax.swing.JLabel lbNrc;
    private javax.swing.JScrollPane spExperienciasEducativas;
    private javax.swing.JTable tblExperienciasEducativas;
    // End of variables declaration//GEN-END:variables
}
